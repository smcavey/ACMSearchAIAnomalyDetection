containers:
  - "search-api"
  - "search-collector"
  - "search-indexer"
  - "search-postgres"
prometheus_queries:
  cpu: "sum(container_cpu_usage_seconds_total{container='search-collector'}) by (pod)"
  memory: "sum(container_memory_working_set_bytes{container='search-collector'}) by (pod)"
  filesystem: "sum(container_fs_usage_bytes{container='search-collector'}) by (pod)"
services:
  prometheus: "$PROMETHEUS_ROUTE_PATH"
  service-api: "$SEARCH_API_METRICS_PATH"
  service-collector: "$SEARCH_COLLECTOR_METRICS_PATH"
  service-indexer: "$SEARCH_INDEXER_METRICS_PATH"
scrape_interval: 30
token: "sha256~..."
z_score_threshold: 2.0
services_context:
  search-api:
    description: "Handles user queries to fetch multi-cluster state. Reads from search-postgres."
    depends_on:
      - "search-postgres"
  search-collector:
    description: "Collects cluster state and forwards to search-indexer."
    depends_on:
      - "search-indexer"
  search-indexer:
    description: "Aggregates incoming cluster state from search-collector. Keeps search-postgres up to date with cluster state."
    depends_on:
      - "search-postgres"
  search-postgres:
    description: "Stores multi-cluster state."
    depends_on: []
